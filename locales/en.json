{
  "continue": "Continue",
  "ok": "Ok",
  "yes": "yes",
  "no": "no",
  "eg": "eg.",
  "next": "Next",
  "done": "Done",
  "loading": "Loading...",
  "nomore": "No more elements",
  "registered": "registered",
  "created": "created",
  "started": "started",
  "stopped": "stopped",
  "tally_ok": "tally done",
  "results_ok": "results done",
  "results_pub": "results published",
  "doing_tally": "doing the tally",
  "tally_error": "tally error",

  "app": {
    "name": "Agora Voting"
  },
  "avCommon": {
    "cancel": "Cancel",
    "poweredBy": "Powered by <strong><a href=\"__url__\" target=\"_blank\">__name__</a></strong>",
    "shareLink": "Tweet this election!",
    "votingSystem": "Voting System",
    "votings": {"plurality-at-large": "Plurality at large", "borda-nauru": "Nauru's Borda Count or Borda Dowdall (1/n)", "borda": "Borda Count (traditional)", "pairwise-beta": "Pairwise (beta-distribution)"}
  },
  "avAdmin": {
    "notes": {
      "noteTag": "Note",
      "thisisATestElection": "This is a test election. For security reasons, real elections can only be created out of successful test elections.",
      "thisisATestElectionPopover": "This is a test election. For security reasons, real elections can only be created out of successful test elections. You must complete the election process up to the results publish step."
    },
    "topbar": {
        "home": "Home",
        "features": "Features",
        "help": "Help",
        "freesignup": "Free sign up",
        "login": "Enter",
        "logout": "logout"
    },
    "learnMore": "Learn more..",
    "sidebar": {
        "elections": "Elections",
        "newel": "New election",
        "import": "Import",
        "currentel": "Current election",
        "dashboard": "Dashboard",
        "basic": "Basic details",
        "questions": "Questions",
        "censusConfig": "Census Configuration",
        "census": "Census Data",
        "successAction": "Success Action",
        "auth": "Authentication",
        "tally": "Tally",
        "create": "Create Election",
        "myAccount": "My account",
        "billinfo": "Billing information",
        "billhistory": "Billing history",
        "buy": "Buy credits"
    },
    "elections": {
        "filter": "Filter...",
        "test": "test",
        "real": "real",
        "status": "Status",
        "participation": "Participation"
    },
    "action": {
        "create": "create",
        "start": "start",
        "stop": "stop",
        "tally": "tally",
        "publish": "publish"
    },
    "import": {
        "desc": "Importing an election from csv allows you to manage and automate the creation of elections details from an external source. <a href=\"https://docs.google.com/spreadsheets/d/1WTzswqiuRllZIm90A-SBQ0kbVYDQI1jZvKcvL8ruMIY/edit?usp=sharing\" target=\"_blank\">Read more about the CSV election format here</a>. If you want to create many elections at once, you can use the API or contact us.",
        "file": "Select file",
        "dropFilesHere": "Drop CSV file here"
    },
    "dashboard": {
        "createRealElection": "Create REAL election",
        "duplicateElection": "Duplicate election",
        "sendAuthCodes": "Send auth codes",
        "donow": "click to do now",
        "votes": "Votes",
        "census": "Census",
        "questions": "Questions",
        "answers": "Answers",
        "status": "Status",
        "authentication": "Authentication",
        "electionid": "Election Id",
        "authorities": "Authorities",
        "create": "Create",
        "start": "Start voting",
        "stop": "Stop voting",
        "tally": "Tally",
        "publish": "Publish results",
        "doingtally": "Doing the tally",
        "results": "Results",
        "blankvotes": "Blank votes",
        "nullvotes": "Null votes",
        "optionvotes": "Votes to options",
        "option": "Candidature",
        "votes": "Votes",
        "winner": "Winner position",
        "publicResultsUrl": "Public results url",
        "electionPublic": "Election public site",
        "censussend": "Census send correctly",
        "preview": "Demo voting booth",
        "actions": {
          "actionsLabel": "Actions",
          "changeSocial": "Edit social...",
          "sendAuthCodes": "Send auth codes..."
        },
        "modals": {
          "createHeader": "Create election",
          "createBody": "To create the election, its configuration is sent to the election authorities and they create election encryption public keys. After that, the election is no longer editable. Before doing this, please check that the configuration is correct (for example taking a look at the demo voting booth). If you need to change the election after this, you will have to create a new one.",
          "confirmCreateButton": "Confirm and CREATE election",
          "startHeader": "Start election",
          "startBody": "Please be aware that once you start the elections, voters will be able to vote until the election is stopped",
          "confirmStartButton": "Confirm and START the election",
          "stopHeader": "Stop election",
          "stopBody": "Once you stop the election, people will not be able to vote anymore.  Please be aware of this and exercise caution",
          "confirmStopButton": "Confirm and STOP the election",
          "tallyHeader": "Tally election",
          "tallyBody": "The tally process is run by the election authorities and may take a while, depending on the number of votes. It involves a mathematically verifiable cryptographic process that anonymizes and obtains the content of each vote.",
          "confirmTallyButton": "Confirm and TALLY the election",
          "publishResultsHeader": "Publish election results",
          "publishResultsBody": "Currently only the election administrators have access to the calculated election results. When you publish the results, these will be made public for everyone to see.",
          "confirmPublishResultsButton": "Confirm and PUBLISH election results",
          "changeSocial": {
            "header": "Edit social networks share buttons",
            "title": "Social Network Buttons",
            "new": "New button",
            "confirmButton": "Confirm and SAVE social networks configuration",
            "socialNetworkLabel": "Social Network",
            "buttonTextLabel": "Button text",
            "socialMessageLabel": "Share text",
            "socialMessagePlaceholder": "Text to be shared on social networks (use __URL__ for the default election url)",
            "buttonTextPlaceholder":  "Text for the share button (it can be empty)",
            "nameLabel": "Name",
            "infoHeader": "Configuration saved",
            "infoBody": "The social networks buttons configuration has been successfully saved.",
            "socialUrlLabel": "Link",
            "socialUrlPlaceholder": "Election link to be shared on social networks (use __URL__ for the default election url)"
          },

          "sendAuthCodes": {
            "editMessageStep": {
              "header": "Send authentication codes (Step __step__ of __total__)",
              "helpInfo": "This action will send a message to all the registered electors in the census. Note that sending many messages can be considered as SPAM, so proceed with caution. Also, please review the message that will be sent before proceeding.",
              "sendButton": "SEND authentication codes to ALL census",
              "sendSelectedButton": "SEND authentication codes to SELECTED users"
            },
            "confirmStep": {
              "header": "Send authentication codes (Step __step__ of __total__)",
              "helpInfo": "You will send the authentication to __voters__ electors. Please, verify that everything is correct. If you have any trouble please contact us at __email__ or calling us at __tlf__.",
              "sendButton": "Confirm and send the messages",
              "invalidMsg": "Yes, I want to send these messages without authentication code / URL",
              "messageHeader": "Preview",
              "editMessageAction": "Edit",

              "unknownError": "The messages were not sent nor charged. An unknown error occurred when sending the messages. If this problem persists, please contact us to resolve this issue at __email__ or calling us at __tlf__."
            }
          }
        }
    },
    "basic": {
        "intro": "Creating an election requires multiple steps, but it is not difficult. It will only take 5 minutes. Please read the Administrator Manual, linked in the help icon at the top navegation bar.",
        "title": { "label": "Title", "placeholder": "eg.New Board of Directors", "labelH3": "__index__. Election titled: __title__" },
        "description": { "label": "Description", "placeholder": "Description will be shown" },
        "logo_url": { "label": "Custom logo", "placeholder": "URL for a custom logo for this election. Maximum recommended size is 150x150 px." },
        "layout": { "label": "Layout", "placeholder": "Specifies how the whole election will be displayed" },
        "layouts": { "simple": "Simple", "2questions-conditional": "Yes/No", "pcandidates-election": "Table Candidates" },
        "theme": { "label": "Theme", "placeholder": "How will the election look like?" },
        "themes": { "default": "Default", "podemos": "Purple" },
        "questionOptionsSummary": "<strong>__num_answers__</strong> candidates. Voters select between <strong>__min__</strong> and <strong>__max__</strong> options (randomize: <strong>__random__</strong>) and there are <strong>__num_winners__</strong> winners. The tally method is <strong>__tally_method__</strong>.",
        "censusSize": "__num__ people",
        "registerAndCreateElection": "Not only register the election, but also create it at the election authorities. This means you won't be able to modify the election."
    },
    "questions": {
        "new": "New question",
        "winners": {
          "label": "Number of winners",
          "placeholder": "How many winners should there be? Minimum is 1 and maximum is the number of options",
          "numOptionsError": "There are __winners__ winners but only __cands__ candidates",
          "minError": "There must be at least 1 winner"
          },
        "min": {
          "label": "Minimum number of selected options",
          "placeholder": "How many options should a voter select in this question? Minimum is zero wich would allow blank votes",
          "maxError": "Minimum number of choosable candidatures can be at most __max__",
          "minError": "Cannot be negative"
          },
        "max": {
          "label": "Maximum number of selected options",
          "placeholder": "How many options can a voter select in this question?",
          "numOptionsError": "Voters can choose up to __max__ candidatures, but there are only __cands__ candidatures",
          "minError": "Must be at least 1 "
        },
        "random": {"label": "Randomize options order", "placeholder": "When randomization of the options order is active, each voter will see the options for this question in a different order in the voting booth"},
        "candidates": {
          "label": "Candidates",
          "placeholder": "Candidate options that can be voted for this question",
          "minError": "There must be at least one candidate"
        },
        "newopt": "New option name",
        "layout": {
          "label": "Layout",
          "placeholder": "Specify how the question will be shown",
          "accordion": "Normal",
          "circles": "Images with details",
          "conditional-accordion": "Conditional accordion",
          "simultaneous-questions": "Simultaneous questions"
        },
        "option": {
          "textFieldLabel": "Text",
          "textFieldPlaceholder": "Candidate option text",
          "detailsFieldLabel": "Details",
          "detailsFieldPlaceholder": "More detailed information about the candidate option",
          "categoryFieldLabel": "Category",
          "categoryFieldPlaceholder": "Used to group candidates in teams in some layouts",
          "urlFieldLabel": "Url",
          "urlFieldPlaceholder": "https://example.com",
          "imageUrlFieldLabel": "Image Url",
          "imageUrlFieldPlaceholder": "https://example.com/path/to/image.jpg"
        }
    },
    "censusConfig": {
        "intro": "The census specifies who can vote and the details we need from each elector. You can configure it here"
    },
    "census": {
        "intro": "The census specifies who can vote and the details we need from each elector. You can manage it here",
        "reg": { "label": "Registration", "placeholder": "How the census is generated?" },
        "census": {
          "open": "Open registration",
          "openDescription": "Census can not only be generated by election administrators, but also individuals can register following the authentication process.",
          "close": "Closed registration",
          "closeDescription": "The census is generated by administrators. Third parties cannot register into the census."
        },

        "modals": {
          "addCsvHeader": "Add CSV to census",
          "addCsvBody": "Here you can add many people at once. The format is CSV, one person per line. Use semicolon to split fields, in order. Note that no data validation is done, so it's up to you to insert valid data.",
          "addCsvTextareaPlaceholder": "one voter per line, keep the field order",
          "confirmAddCsvButton": "Confirm and ADD CSV to census",

          "addPersonHeader": "Add Person to census",
          "addPersonBody": "Manually add a single person to the census. Note that no data validation is done, so it's up to you to insert valid data.",
          "confirmAddPersonButton": "Confirm and ADD person to census",

          "removePeopleHeader": "Remove selected people from census",
          "removePeopleBody": "Removing the selected __num__ people from the census is irreversible. Note that this will not remove their votes if they have voted.",
          "confirmRemovePeopleButton": "Confirm and REMOVE selected __num__ people from census",

          "activatePeopleHeader": "Activate selected people from census",
          "activatePeopleBody": "Activating the selected __num__ people. This will allow these people to vote",
          "confirmActivatePeopleButton": "Confirm and activate selected __num__ people in census",

          "deactivatePeopleHeader": "Deactivate selected people from census",
          "deactivatePeopleBody": "Deactivating the selected __num__ people. This will NOT allow these people to vote",
          "confirmDeactivatePeopleButton": "Confirm and deactivate selected __num__ people in census",

          "exportAllCensusHeader": "Export all census in CSV",
          "exportAllCensusBody": "Here you can download the whole census in a CSV (Comma Separated Values) spreadsheet format, so you can process it elsewhere. There are __total__ people in your census. Depending on the size of the census, the process of downloading the whole census may take a while. Once it finishes, you will be prompted to download the census. If you have any filter active, this filter will also be applied to the downloaded CSV file.",
          "confirmexportAllCensusButton": "Confirm and download the census, with __total__ people"
        },
        "addPersonAction": "Add person...",
        "addCsvAction": "Add CSV to census...",
        "activateAction": "Activate __num__ selected people...",
        "deactivateAction": "Deactivate __num__ selected people...",
        "filteredEmptyResults": "No person matched the current filter.",
        "emptyCensus": "Census is currently empty. You can add people through the Actions button.",
        "removedCensusSuccessfully": "Removed selected people from census successfully",
        "activatedCensusSuccessfully": "Activated selected people in census successfully",
        "deactivatedCensusSuccessfully": "Deactivated selected people in census successfully",
        "sentCodesSuccessfully": "Sent authentication codes successfully",

        "voted": "voted",
        "notVoted": "not voted",
        "votedColumnHeader": "Voted?",
        "activeColumnHeader": "Active?",

        "censusadd": "Voters added to the census",
        "actionsDropdown": "Actions",
        "selectAllShownAction": "Select all people shown",
        "deselectAllShownAction": "Deselect all people shown",
        "exportCensusAction": "Export all census to CSV..",
        "removeCensusAction": "Remove __num__ selected people..",
        "sendAuthCodesAction": "Send auth codes to __num__ selected..",
        "idColumnHeader": "Id",
        "creationDateHeader": "Created date",
        "selectedColumnHeader": "Select",
        "emailOption": "email",
        "passwordOption": "password",
        "codeOption": "code",
        "textOption": "text",
        "tlfOption": "tel",
        "intOption": "int",
        "boolOption": "bool",
        "captchaOption": "captcha",
        "textareaOption": "textarea",
        "dictOption": "Key-value",
        "fieldTypeLabel": "Type",
        "fieldRegExLabel": "Regular expression",
        "fieldRegExPlaceholder": "Advanced users only - Example: ^(1000|1010)$",
        "fieldMinLabel": "Min",
        "fieldMaxLabel": "Max",
        "fieldNameLabel": "Field name",
        "fieldNamePlaceholder": "Example: Name and Surname",
        "fieldHelpLabel": "Help text",
        "fieldHelpPlaceholder": "Example: Insert both your name and surname",
        "fieldRequiredLabel": "Required",
        "fieldUniqueLabel": "Unique",
        "fieldRequiredAuthLabel": "Checked against census in authentication",
        "fieldPrivateLabel": "Private (only administrators can see and use this field)",
        "extraFieldsHeader": "Extra fields",
        "extraFieldsInfo": "Here you can define extra fields in the census in a versatile way. This allows you to do a range of things: adding extra checks against the census in closed registration, registering new fields in open registration, etc.",
        "fields": {"label": "Extra fields", "placeholder": "Voter extra fields"},
        "configurationHeader": "Configuration",
        "manage": "Manage census",
        "name": "Name",
        "required": "Required",
        "add": "Add a new field",
        "nonEditableField": "(Required by auth method)",
        "manualAdd": "Manual add",
        "export": "Export",
        "image": "View image",
        "imageModalTitle": "View image",
        "imageModalClose": "Close"
    },
    "auth": {
        "intro": "Authentication is the means used to ensure that an elector is who he sais he is. Here you need to find a balance between security, usability and cost",
        "auth": "Auth method",
        "auths": {"email": "Email links", "sms": "SMS", "dnie": "spanish eDNI"},
        "sms": "SMS message",
        "smstemp": "Template used in the SMS to send to the user. Use __CODE__ to insert the SMS code and __URL__ for the authentication url, or _URL2__ to insert a link that includes the code",
        "smsdef": "This is your vote code: __CODE__",
        "email": "Email message",
        "emailsub": "Email subject",
        "emailtemp": "Template used in the Email link to send to the user. Use __CODE__ to insert the login code and __URL__ to insert the election link, or _URL2__ to insert a link that includes the code",
        "emailsubdef": "Vote now with __name__",
        "emaildef": "Vote in __URL__ with code __CODE__"
    },
    "columnFilter": {
      "sort": "Sort:",
      "filter": "Filter:",
      "minDate": "From:",
      "maxDate": "To:",
      "noFilter": "No",
      "noSort": "No",
      "sortAsc": "Asc",
      "sortDesc": "Desc",
      "min": "min",
      "max": "max"
    },
    "create": {
        "summary": "Summary: creating __num__ elections",
        "summary__plural": "Summary: creating __num__ elections",
        "create": "Create the elections",
        "creating": "Creating the authentication for election __title__",
        "census": "Adding the census (id: __id__) __title__",
        "reg": "Registering the election (id: __id__) __title__",
        "creatingEl": "Creating election (id: __id__) __title__",
        "logHeader": "Log",
        "errors": {
          "election-is-array-questions": "Election '__eltitle__': list of questions is not an array",
          "election-lambda-success-action-url-mode": "Election '__eltitle__': invalid success action url",
          "election-lambda-min-email-msg": "Election '__eltitle__': email message length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-email-msg": "Election '__eltitle__': email message length is __len__ characters, exceeding the maximum of __max__",
          "election-lambda-min-email-title": "Election '__eltitle__': email title length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-email-title": "Election '__eltitle__': email title length is __len__ characters, exceeding the maximum of __max__",
          "election-lambda-min-sms-msg": "Election '__eltitle__': sms message length is __len__ characters, but it has to be at least __min__ characters long",
          "election-lambda-max-sms-msg": "Election '__eltitle__': sms message length is __len__ characters, exceeding the maximum of __max__",
          "election-array-length-min-questions": "Election '__eltitle__': there must be at least __min__ questions but there are only __num__",
          "election-array-length-max-questions": "Election '__eltitle__': there must be at most __max__ questions but there are __num__",
          "election-array-length-max-description": "Election '__eltitle__': description length is __num__, exceeding the maximum of __max__",
          "election-is-string-description": "Election '__eltitle__': description is not a string",
          "election-array-length-max-title": "Election '__eltitle__': title length is __num__, exceeding the maximum of __max__",
          "election-is-string-title": "Election '__eltitle__': title is not a string",
          "election-question-array-length-max-description": "Election '__eltitle__', question '__qtitle__': description length is __num__, exceeding the maximum of __max__",
          "election-question-is-string-description": "Election '__eltitle__', question '__qtitle__': description is not a string",
          "election-question-array-length-max-title": "Election '__eltitle__', question '__qtitle__': title length is __num__, exceeding the maximum of __max__",
          "election-question-is-string-title": "Election '__eltitle__', question '__qtitle__': title is not a string",
          "election-question-answer-array-length-max-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text length is __num__, exceeding the maximum of __max__",
          "election-question-answer-is-string-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text is not a string",
          "election-question-answer-array-length-min-text": "Election '__eltitle__', question '__qtitle__', answer '__atext__': text length is __num__, but it has to be at least __min__ characters long",
          "election-question-answer-array-length-max-details": "Election '__eltitle__', question '__qtitle__', answer '__atext__': details length is __num__, exceeding the maximum of __max__",
          "election-question-answer-is-string-details": "Election '__eltitle__', question '__qtitle__', answer '__atext__': details is not a string",
          "election-question-answer-array-length-max-category": "Election '__eltitle__', question '__qtitle__', answer '__atext__': category length is __num__, exceeding the maximum of __max__",
          "election-question-answer-is-string-category": "Election '__eltitle__', question '__qtitle__', answer '__atext__': category is not a string",
          "election-question-is-array-answers": "Election '__eltitle__': list of answers is not an array",
          "election-question-is-int-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose is not an integer",
          "election-question-is-int-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is not an integer",
          "election-question-is-int-num-winners": "Election '__eltitle__', question '__qtitle__': the number of winners is not an integer",
          "election-question-array-length-min-answers": "Election '__eltitle__', question '__qtitle__': there must be at least __min__ answers, but there are only __num__",
          "election-question-array-length-max-answers": "Election '__eltitle__', question '__qtitle__': there must be at most __max__ answers, but there are __num__",
          "election-question-int-size-min-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose must be a positive integer, but it's __value__",
          "election-question-int-size-max-min": "Election '__eltitle__', question '__qtitle__': the minimum number of candidates that a voter can choose is __value__, but cannot be larger than the maximum which is __max__",
          "election-question-int-size-min-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is __value__, but must be bigger or equal than the minimum which is __min__",
          "election-question-int-size-max-max": "Election '__eltitle__', question '__qtitle__': the maximum number of candidates that a voter can choose is __value__, but cannot be larger than the number of candidates which is __max__",
          "election-question-int-size-min-num-winners": "Election '__eltitle__', question '__qtitle__': there must be at least one winner, but it is __value__ instead",
          "election-question-int-size-max-num-winners": "Election '__eltitle__', question '__qtitle__': the number of winners is __value__, but cannot be bigger than the number of answers which is __max__"
        }
    },

    "successAction": {
      "modeIntro": "Once a user registers or authenticates, an action should be executed. Usually, it's redirected to the corresponding election voting booth, but it can also be configured to load an external URL. This is useful if you are using this just to register census and not for any active election.",

      "voteModeTitle": "Load the election's voting booth",
      "voteModeDescription": "Load the corresponding election voting booth so that the person can vote.",

      "urlModeTitle": "Redirect to URL",
      "urlModeDescription": "Load an URL that you can specify. Only https urls allowed.",
      "urlModePlaceholder": "https://example.com/foo/bar",
      "invalidUrl": "Invalid URL. Example of a valid URL: https://example.com/foo/bar"
    }
  }
}
